Article
Human-AI collaboration in the modernisation of COBOL-based legacy systems: The case of the Department of Government Efficiency (DOGE)
Inês Melo 1, Daniel Polónia 2 and Leonor Teixeira 3,*
Department of Economics, Management, Industrial Engineering and Tourism (DEGEIT), University of Aveiro, 3010-193 Aveiro, Portugal; ines.melo@ua.pt
Department of Economics, Management, Industrial Engineering and Tourism (DEGEIT); dpolonia@ua.pt
Department of Economics, Management, Industrial Engineering and Tourism (DEGEIT), Institute of Electronics and Informatics Engineering of Aveiro (IEETA); lteixeira@ua.pt
*	Correspondence: lteixeira@ua.pt
Abstract: This paper aims to explore the challenges of maintaining and modernising legacy systems, particularly COBOL-based platforms, the backbone of many financial and administrative systems. By presenting the DOGE team’s initiative to modernise government IT systems on a relevant case study, the author analyses the pros and cons of AI and Agile methodologies in addressing the limitations of static and highly resilient legacy architectures. A systematic literature review was conducted to assess the state-of-the-art about legacy system modernisation, AI integration, and Agile methodologies. Then, grey literature was analysed to provide practical insights into how government agencies can modernise their IT infrastructures while addressing the growing shortage of COBOL experts. Findings suggest that AI may support interoperability, automation, and knowledge abstraction, but also introduce new risks related to cybersecurity, workforce disruption, and knowledge retention. Furthermore, the transition from Waterfall to Agile approaches poses significant epistemological and operational challenges. The results highlight the importance of adopting a hybrid human-AI model and structured governance strategies to ensure sustainable and secure system evolution. This study offers valuable insights for organisations that are facing the challenge of balancing the desire for modernisation with the need to ensure their systems remain functional and manage tacit knowledge transfer.
Keywords: agile methodologies; artificial intelligence (AI); COBOL; government IT; knowledge management; Legacy systems


1. Introduction

In the era of digital transformation, many sectors such as finance, telecommunications, healthcare and public administration are under increasing pressure to modernise legacy systems to keep up with the incorporation of new advanced technologies and sustain a competitive advantage [1]. However, over the past few decades, due to the retirement of the original developers and key stakeholders of these systems, coupled with a lack of available domain experts and the complexity of transitioning legacy systems to newer technologies [2], knowledge sharing has become a critical driver of innovation [3]. Recent studies have reinforced these findings, highlighting the need for substantial modifications to legacy IT infrastructures, particularly to address data privacy concerns and to mitigate the lack of specialised skills, which hinders the conversion of tacit knowledge into explicit knowledge – a fundamental process for sustaining long-term viability [4]. This is particularly relevant in sectors such as finance in developing countries, where legacy systems persist and cybersecurity resilience relies increasingly on the adoption of advanced technologies like AI and machine learning (ML) [5]. Empirical research suggests that migrating legacy software is a better approach than discarding it and building new software in its place. However, this migration does not guarantee the correctness and completeness of the legacy system, and it may take time to gain the confidence of users [6]. Recognising these challenges, academics have explored strategies for migrating a legacy system, but outline that at the time of publication of their study, there was no structured approach to supporting developers in the complex activities of a migration process [7]. Some practitioners believe that cutting-edge technologies, such as generative AI, could help governments address the significant operating risks associated with the retirement of available workers with knowledge on outdated programming languages, such as COBOL (Common Business-Oriented Language), but this is not yet a consensual idea [8].
To encourage researchers to rethink solutions in AI-related areas and to generate fresh evidence and new insights that bridge the gap between theory and practice, there have been several calls for papers from top-tier journals, such as “Human-computer interaction” form Informatics (ISSN 2227-9709) which leads us to believe that AI tools can play an important role in shaping the knowledge ecosystem [9].
Despite the growing academic interest of academic in AI applications and approaches to modernising legacy IT systems, particularly COBOL-based platforms, there has been little research into how AI, integrated with Agile methodologies, can enhance the modernisation of these systems, which remain dependent on a 60-year-old computer programming language. While renowned companies such as IBM are at the forefront of many current developments, including new mainframes, academic engagement with COBOL is declining as students and teachers lose interest in the language, so universities must to continuously challenge them to keep up with the pace [10]. It also seems that there is a greater need for real-world use cases and user histories than for theoretical debates [11]. However, theoretical studies can be important to support new research.
This unique relationship between the importance of a grounded theoretical approach and practical recommendations reveals a clear research gap: the need for a deeper understanding of the pros and cons of AI and Agile methodologies in overcoming the limitations of static and highly resilient legacy architectures. This study addresses this gap by investigating the landscape of COBOL-based legacy systems, with a particular focus on the real-world case of DOGE, an initiative of the second Donald Trump administration in the United States, whose goal is “modernising federal technology and software to maximize governmental efficiency and productivity“ [12]. Rather than relying solely on conceptual analysis, this research uses a dual-source literature approach to ensure a comprehensive understanding of both scientific and practical perspectives:
1.	Scientific literature: This study integrates scientific articles on Agile methods, with a particular focus since the publication of the Agile Manifesto in 2001 [3], alongside studies on AI applications on legacy systems.
2.	Grey literature and industry insights: To include practical perspectives, this research examines technology magazines, industry reports, and expert analysis, such as MIT Technology Review articles [13].
This approach set this study apart by analysing a real-life scenario of a government department that is facing controversy for delayed IT modernisation efforts. By examining this case, this study assesses the positive and negative outcomes of legacy systems management, explores the role of AI and agile methodologies, and outlines future research directions for more actionable modernisation strategies.
The article is structured into five sections: First, the author presents an overview of the topic, including the main studies that support the research, research gaps and research objectives. Next, the core concepts of legacy modernisation are defined. This is followed by the methodology section, which details the systematic literature review and the inclusion of grey literature to provide practical insights. The results of the literature review and a case study are then discussed. Finally, theoretical and practical implications, recommendations for organisations, research limitations, and future research directions are presented.
2. State of the art
In this section, the state of the art in legacy systems and COBOL-based infrastructures is examined, with a particular focus on modernisation challenges and the integration of AI tools and Agile methodologies, based on a systematic literature review. Key framework such as AI-driven decision support systems [14], modular AI architecture for anomalies detection [15], and Agile-based iterative modernisation models will be explored to highlight structured approaches to legacy system transformation [16]. Finally, based on grey literature will be used to analyse the DOGE case.
2.1. Defining legacy systems and COBOL-based software
A legacy system is defined as an “older software application that uses an obsolete hardware and software platform which is hard and expensive to maintain and integrate with modern systems” [17]. Despite their increasing obsolescence, legacy systems continue to play an important role in multiple sectors, particularly in financial and governmental institutions [18]. As recently highlighted by [19], the maintenance of legacy software, often developed in COBOL, is a critical and necessary effort as it contains the important business logic. The authors emphasise that this modernisation can be challenging and requires an deep understanding of system behaviour, stating that “it is necessary to completely understand the behaviour of components in relation to their interfaces, i.e., their interface protocols, and to preserve this behaviour during the maintenance activities of the components” [19].
While some modernisation strategies focus on replacing legacy systems, others advocate for extending their lifespan through incremental improvements. Authors such as [20] argue that legacy systems do not necessarily need to be replaced; instead, their effective life can be extended by integrating new technologies such as the Internet of Things (IoT) and AI. However, there are several approaches to modernising legacy systems in the literature. [17] explore the use of artificial neural networks to enhance data processing and fraud detection while preserving the core business logic embedded in financial legacy systems. In contrast, [18] propose a system re-engineering approach, transitioning a monolithic architecture to a new microservice architecture, aiming to reduce complexity, achieve lower coupling and higher cohesion, and simplify integration.
Legacy systems present different levels of complexity and integration challenges, often categorised according to their adaptability and compatibility with modern technologies. Fully monolithic systems pose the greatest modernisation challenges due to their rigid structure; whereas postmodern systems have been incrementally updated through enterprise-wide coordination, allowing them to evolve with internal and external requirements while integrating newer technologies [21]. In this regard, [22] refer that in 2019, many agencies that supported the COVID-19 response relied on outdated legacy systems (stand-alone electronic systems), which struggled to handle the increased demand for digital services and rapid data processing, so they had to accelerate their efforts to modernise these systems. 
COBOL remains one of the most enduring programming languages in legacy systems, with at least 20 billion lines of code still in use worldwide, representing 43% of all banking systems in the US in 2017 [23]. However, its monolithic structure and outdated design make modernisation complex, requiring programme abstraction and Agile approaches to support the redevelopment and improvement of the system [3].
2.2. Legacy systems, AI tools and Agile methodologies
Based on a comprehensive review, [14] highlights the extensive applications of AI techniques in revolutionising traditional approaches in IT infrastructures, particularly in (a) improving accuracy [24], (b) reducing operational costs [25], and (c) enhancing decision making [15]. According to Elahi [14] also characterise modernisation strategies for legacy systems, characterise AI-driven data processing, predictive maintenance, and automated decision support with AI-generated insights. In this regard, [25] highlights how AI-enhanced real-time monitoring improves the efficiency of legacy system operations by reducing response times to failures and optimising resource allocation. However, [26] explains that despite these advances, the biggest challenge remains the integration of new technologies with the legacy infrastructure, as most organisations are required to completely restructure their classical systems or find a way to ensure successful integration. To address this concern, [27] uses a real-world case study of a legacy banking system to describe how the challenge previously highlighted by Asif, Ghanem and Irvine [26], can be addressed by leveraging Agile methodologies so that organisations can make incremental adjustments and continuously assess requirements to mitigate technical risks.
A central challenge is the epistemological gap between COBOL’s structured Waterfall approach and Agile’s constructivist paradigm [28]. COBOL development is rooted in positivist epistemology, emphasising linear processes, rigid documentation, and pre-defined requirements. This results in codified but static knowledge, making it difficult to adapt to evolving business needs. Agile methodologies, on the other hand, operate within a constructivist epistemology, where knowledge is continuously refined through collaborative problem-solving, iteration, and team-based learning. 
The shift from Waterfall to Agile is not just a technical transition but a fundamental change in how knowledge is created, shared, and retained. Catherine et al. [29] show in a real case that modernising COBOL-based legacy banking systems that COBOL experts to rely on extensive documentation and structured workflows, while Agile promotes tacit knowledge transfer through practices like pair programming and cross-functional collaboration. This collaboration is important for preventing the loss of institutional knowledge, particularly as COBOL-experienced professionals retire. 
Terry and Chandrasekar [16] developed a structured Agile lifecycle model to support the evolution of legacy systems into an enterprise by iteratively refining requirements and managing complexity during system transformation. AI-assisted abstraction tools can support this transition by automating system abstractions and generating target code in multiple languages/platforms while preserving the core functionality of legacy infrastructures [3]. 
In the case study by Sullivan [22], adopting an Agile approach with constant real-time feedback from end users in a high-pressure modernisation scenario, such as the COVID-19 pandemic, is key to successful outcomes. However, the integration of AI tools into legacy infrastructures raises data privacy concerns, as AI-driven automation requires extensive access to historically sensitive information [30]. These challenges are particularly evident in the case of DOGE, which is presented in the next section. 
2.3. DOGE legacy systems characterisation
After establishing the key concepts and discussing the main theoretical foundations in Sections 2.1 and 2.2, this section provides the empirical context for the research by characterising the controversial initiative by Elon Musk’s DOGE team to modernise government IT systems, which has spawned opposition and lawsuits [31]. This analysis is particularly relevant for practitioners and academics seeking to understand the technological characteristics of DOGE’s COBOL-based infrastructure as well as its modernisation challenges and broader implications.
2.3.1. COBOL-based legacy systems and modernisation challenges: The case of DOGE
A notable example of an organisation with a sense of urgency to modernise legacy IT systems is the DOGE department, led by Musk and Vivek Ramaswamy in 2024 [32]. The initiative began in mid-2024, when Elon Musk proposed a "government efficiency commission" to Donald Trump, which later evolved into DOGE, which was officially established by Executive Order 14158 in January 2025 to consolidate agencies, cut costs, and modernise outdated IT systems with AI-driven alternatives [33]. Musk began highlighting the urgent need for this modernisation on social media in 2024, saying, “The government runs on ancient computers & software. Needs an upgrade!” [34], and shared a Government Accountability Office (GAO) report from  2023 that revealed that several federal agencies still rely on outdated and obsolete IT systems using older languages such as COBOL, some of which exceeding 50 year old in operation [32], [35]. 
The urgency of this matter is reflected in previous GAO assessments. According to the GAO report in 2019 [35], ten critical federal agencies were identified as most in need of modernization in 2019, but only two agencies had documented modernisation plans that included three key elements: (i) milestones to complete the modernization, (ii) a description of the work necessary to modernize the legacy system, and (iii) details regarding the disposition of the legacy systems. By 2023, six of the remaining eight agencies had implemented modernisation plans based on GAO’s recommendations, leaving the Department of Transportation and the Office of Personnel Management as the only agencies without fully developed plan. Table 1 provides a comparison of agencies’ progress in implementing modernisation plan from June 2019 to May 2023.

Table 1. Progress in documenting modernisation plans for critical federal legacy systems (adapted from GAO-23-106821 report)

A preliminary analysis suggests that while federal agencies are increasingly prioritising the modernisation of legacy systems, challenges remain, particularly in ensuring accuracy and preventing critical operational failures. For instance, Burman [36] highlights that legacy COBOL infrastructures continue to pose significant operational challenges at the Social Security Administration (SSA), which is being victim of a scrutiny that revealed critical errors in beneficiary records, including cases where people over the age of 150 were still listed as beneficiaries due to flaws in data processing errors. These issues led the author to set the goal of analysing more closely the impact of outdated systems on government processes and regulated industries, particularly DOGE. 
However, concerns about modernisation efforts go beyond operational inefficiencies. The MIT Technology Review article, published in February 2025 [13], warns that DOGE’s modernisation strategy, while ambitious, has raised significant security risks by eliminating key oversight mechanisms. The so-called “Evil Housekeeper Problem”, which states that “once someone is in your hotel room with your laptop, all bets are off”, is used an analogy to illustrate how DOGE’s the risks associated with DOGE’s decision to remove the Authority to Operate (ATO) process, which allowed unauthorised individuals to make unauthorised changes to government systems. 
In parallel with these modernisation efforts, according to Shrivastava [37], DOGE has begun to use AI models to optimise government operations, particularly in workforce management and the processing of large amounts of sensitive data. Kube et al. [38] explained that this initiative is controversial because DOGE pretends to evaluate the productivity of government employees based on a Large Language Model (LLM) by asking employees to self-report what they got done in the last week via email, while AI determines which roles are redundant. Such initiatives could represent a first step in modernising legacy systems by helping to improve reporting and data processing, but they also raise serious concerns about the reliability and fairness of AI-driven decision-making in government [39]. 
This approach is in line with DOGE’s “AI-first strategy” perspective, as highlighted by Thomas Shedd’s recent comments to General Service Administration staff, and reinforces the administration’s push to restructure government agencies to operate like “startup software companies” [40]. The plan is to deploy AI widely across the federal government,  using AI capabilities to analyse contracts for redundancies, root out fraud, and automate much of the work to facilitate a reduction in the federal workforce [41]. The initiatives have brought in skilled technologists to work with federal agencies, incorporating best practices from the private sector, such as Agile development, which emphasises iterative development, continuous feedback loops, and user-centred design [42].
These advances in the public sector should be viewed with caution, considering that they require a high level of interaction, particularly in data-sensitive services [43]. Therefore, in line with other researchers, we also advocate the need for deeper empirical research to critically assess the effectiveness of integrating AI and Agile methodologies together in legacy system modernisation.
3. Materials and Methods
This study follows a systematic literature review based on PRISMA guidelines to achieve the aim of providing the best possible evidence to inform academics and organisations, while employing a “replicable, scientific and transparent process” [44]. As shown in Figure 1, Scopus was chosen because of its vast coverage of peer-reviewed articles [45] on Agile methodologies and AI applications compared to other similar databases such as ScienceDirect and Web of Science. The decision to use a single source database was made because the priority of this study is to achieve a level of transparency that allows other researchers to easily reproduce the results. The literature searched covers the period from 2020 to the first three months of 2025. 
As can be seen in Figure 1, there has been a significant increase in the number articles published since 2020, due to the need to explore solutions for modernising legacy systems, which will be the main topic explored in the case study presented in this article. Figure 1 further supports the relevance of the research topic and the time period chosen, as the number of publications related to legacy systems and COBOL has grown exponentially over the last few decades, with a particularly sharp increase in the last five years.

Figure 1. Annual distribution of journal articles published by year (retrieved from Scopus)
For the purpose of this study, the literature search was conducted on March 4th 2025, using the following combination of keywords in the Title, Abstract and Keywords fields:
("COBOL" OR "legacy system*") AND ("Artificial Intelligence" OR "AI" OR "LLM*" OR “Agile”)
The author chose to include LLM as a synonym for AI, but excluded additional terms such as “genAI”, “copilot” and “ChatGPT”, as their inclusion did not change the number of articles provide by Scopus. The results are illustrated in Figure 2. 

Figure 2. Results for the two search query terms
To ensure a comprehensive coverage of international publications in both searches, only studies published in English and Portuguese were selected. Because of limited resources for translation, articles in other languages were excluded to avoid potential misinterpretation. There was a total of 188 studies listed. In the initial screening, the author excluded 29 documents that were not conference papers, articles or reviews. 
After an abstract screening was carried out, records were excluded. The remaining 57 articles underwent full-text eligibility assessment, where 40 records were further excluded for falling outside the scope defined by the inclusion and exclusion criteria (Table 2). After this thorough evaluation, 17 articles were selected for the final inclusion stage of the PRISMA process flow. To support the process described above, the author used the open-source reference management software - Zotero to manage bibliographic data. All citations were imported into Zotero.
Table 2. Inclusion and exclusion criteria

Figure 3. Flowchart diagram of the PRISMA literature search
In order to increase the comprehensiveness of the search, grey literature was included in the researcher’s search strategy [46], through a ‘snowball’ technique where citations within papers (i.e.: industry reports and newspapers) were selected if they appeared relevant to the review [47]. This grey literature will focus on exploring the key theme of the case study - Elon Musk’s DOGE team initiative to modernise government IT legacy systems. Notably, executive orders from the White House were examined [12].
To address the epistemological divide between Waterfall-based COBOL methodologies and Agile frameworks, this study applied Epistemological Paradigm Analysis [28].
4. Results and discussion
In this section, the author explores the pros and cons of legacy system modernisation by comparing the existing frameworks identified in the systematic literature review. Next, Section 4.2 applies the findings of Section 4.1 will be applied to the case of DOGE, analysing how AI tools and Agile methodologies can help manage tacit knowledge transfer, mitigate the COBOL talent shortage and accelerate digital transformation in legacy IT environments in the case of DOGE
4.1. Perspectives in legacy system modernisation: results from the systematic literature review
The modernisation of legacy systems, particularly COBOL-based infrastructures, presents challenges that go beyond technical limitations, extending into epistemological, organisational, and operational concerns [28]. While AI and Agile methodologies offer solutions, integrating them into rigid legacy systems requires overcoming barriers related to knowledge retention, system interoperability, cybersecurity, and organisational adaptation [1], [14]. In this regard, studies such as DOGE, which is trying to have a more modern footprint while addressing the talent deficit of COBOL experts, have attracted attention in newspapers and industry blogs, but there is still a notable lack of academic research on these topics, likely due to the novelty of the issue. 
It is evident that legacy system modernisation involves many different approaches, integrating AI tools and Agile methodologies, leading to widespread discussion within the academic community. In this regard, the author has identified three generic points of view: 
Optimistic view: Elahi et al. [14] conducted research to investigate how AI enhances the migration of legacy systems towards modernisation through AI-based decision making. Their results suggest that the strategic implementation of AI enables organisations to achieve higher productivity and cost effectiveness. AI-driven knowledge automation helps mitigate skill shortages, ensuring knowledge extraction from legacy systems can be automated and leveraged for modern development. 
Cautious view: Other scholars take a more measured stance, recognising AI’s benefits but warning about cybersecurity vulnerabilities and interoperability risks in the integration phase [25]. Ntafalias et al. [25] found that AI-driven interoperable architectures for integrating legacy systems can significantly improve operational efficiency by automating knowledge extraction and streamlining data flows, but ensuring seamless compatibility with existing infrastructures remains a challenge.
Sceptical view: The most sceptical positions point out that while AI and Agile methodologies hold promise, their full potential in large-scale legacy system modernisation remains uncertain due to unresolved issues such as scalability, standardisation, data sharing, and interoperability, as many proposed frameworks are still at the pilot stage [26].

Nerur, Mahapatra and Mangalaraj (2005) developed a comparative framework contrasting the positivist epistemology underpinning Waterfall with the constructivist paradigm of Agile [28]. Waterfall methodologies depend on structured workflows, predetermined phases, and extensive documentation to ensure system predictability, yet they lack adaptability. In contrast, Agile fosters adaptability, continuous feedback, and collaborative decision-making through dynamic knowledge creation. However, transitioning from Waterfall to Agile poses risks to institutional knowledge retention. Nerur, Mahapatra and Mangalaraj (2005) argue that hybrid models combining structured documentation with Agile’s iterative learning cycles can maintain system integrity while fostering adaptability [28]. Lano et al. [3] highlight that Agile fosters collaboration between legacy system experts and development teams, ensuring knowledge retention and mitigating the risks of workforce attrition in COBOL-based infrastructures.
Several researchers have proposed solutions to mitigate these challenges. Terry and Chandrasekar [16] introduced a structured Agile lifecycle model designed to facilitate legacy system evolution while maintaining knowledge retention. Their framework incorporates iterative requirement refinement, allowing legacy systems to transition gradually without compromising documentation integrity. Lano et al. [3] extended this approach by proposing AI-assisted abstraction techniques to automate code migration while maintaining system integrity. Their research highlights that while AI-driven abstraction tools accelerate modernisation, they must be complemented by structured oversight mechanisms to prevent technical debt and system instability. Meanwhile, Brataas et al. [27] proposed a knowledge-sharing model that leverages Agile practices such as pair programming and cross-functional collaboration to bridge generational gaps between COBOL experts and modern developers, reducing workforce transition risks.
As Wang et al. [1] note, the financial sector provides a critical example of how AI and Agile methodologies are shaping legacy system modernisation. Their research outlines how cloud computing, big data analytics, and blockchain have revolutionised financial services, enabling greater scalability and automation. However, they emphasise that rapid digitalisation introduces cybersecurity risks, regulatory compliance challenges, and interoperability constraints.
In summary, as the urgency to modernise legacy infrastructures grows, AI-driven tools and frameworks are being developed and, in this regard, researchers have increasingly focused on the complexities of technological adoption and regulatory compliance.  Concomitantly, the number of investigations has grown (Figure 1) in order to explore solutions for modernising legacy systems; however, these studies have primarily examined specific technological approaches tailored to individual systems rather than providing a holistic assessment of the advantages and limitations of existing frameworks for organisations [14].
Table 3 summarises Section 4.1, highlighting that AI-driven decision-making optimises modernisation and reduces costs. However, cybersecurity, interoperability, and organisational adaptation challenges persist. Most authors advocate a structured, cautious approach, integrating AI and Agile while ensuring compliance with security and governance standards.
Table 3. Summary of perspectives on legacy system modernisation

4.2. The DOGE Case: incorporating insights from grey literature analysis
As noted in Section 2.3, the Department of Government Efficiency embarked on an ambitious initiative to nuke bureaucracy across US federal government departments, to modernise legacy IT systems that are “outdated or obsolete” [32]. However, DOGE ended up removing key security mechanisms, such as ATOs, leaving no practical technical measures to prevent unauthorised individuals from taking a spanner to the technology that keeps the government stable [13]. Understandably, this situation led to frustration among experts. Despite these concerns, DOGE has continued with its “AI-first” strategy, which aims to make government agencies operate like a “startup software company” in line with the principles of the Agile Manifesto [40]. For example, according to anonymous sources, the use of AI tools such as ML is becoming common practice in DOGE to analyse huge amounts of text data to understand, generate and process human language [38].
Although DOGE has faced criticism, the push for AI-driven modernisation should not be completely dismissed, but rather re-evaluated. Compared to the traditional approaches, the integration of AI tools, such as the General Services Administration (GSA) chatbot, can streamline administrative tasks (e.g., email drafting and document analysis), improve fraud detection in contract reviews, and increase the accessibility and responsiveness of government services [43].
In this section, the aim is to discuss DOGE's modernisation efforts in the light of AI-driven automation and Agile methodologies at two levels (technical and organisational), as well as the associated pros and cons, as shown in Table 4.
The author will consider the following dimensions: 
•	Security & compliance;
•	System interoperability;
•	Knowledge retention & workforce;
•	AI-driven decision making;
•	Cost efficiency & bureaucratic optimisation.
Technical level: AI-driven modernisation in DOGE has significantly improved system interoperability, enabling seamless data exchange between legacy COBOL-based infrastructures and modern platforms. AI-driven automation has optimised fraud detection and administrative processes, reducing inefficiencies and increasing accuracy. However, the removal of oversight mechanisms, such as the ATO process, has weakened cybersecurity and created vulnerabilities that could be exploited. Furthermore, while AI-driven workforce assessments offer efficiencies, they lack contextual understanding, raising concerns about biased assessments and misclassification of employee performance. For this reason, a structured AI framework is critical to ensure system reliability and mitigate the risks associated with automation.
Organisational level: The integration of AI and Agile methodologies has introduced greater adaptability, enabling refinement of government operations. However, the rapid and unstructured implementation of AI has created inconsistencies across departments, disrupted knowledge transfer and led to resistance from employees who perceive automation as a threat to job stability. Relying on AI to assess employees has also raised ethical concerns, as automated decisions risk overlooking tacit knowledge and human expertise. A hybrid approach, in which AI complements rather than replaces human decision-making, would ensure that DOGE modernises effectively while preserving institutional knowledge, upholding ethical standards and fostering balanced human-AI collaboration within the organisation.
In summary, the results show that DOGE’s AI-driven modernisation has improved efficiency by automating processes and enhancing system interoperability, particularly in COBOL-based legacy systems where expertise is already scarce. By using new technologies such as AI to address legacy system issues, DOGE is trying to reduce the dependence on a reduced pool of COBOL and outdated language experts. However, the rapid and unstructured adoption of AI has also raised concerns about knowledge sharing and human-AI collaboration, as automation alone cannot fully replace the tacit knowledge embedded in legacy systems [14], [27]. Unlike the traditional waterfall approach for system development, which follows a rigid, sequential structure that limits adaptability, the Agile approach facilitates iterative improvements and continuous adaptations to new requirements, making it more suitable for modernising legacy infrastructures [16], [3]. Ensuring that AI complements human expertise, rather than replacing it entirely, is crucial for fostering sustainable digital government operations. Aspects related to such concerns may be a target for future research.
Table 4. Summary of sections 4.1 and 4.2

5. Conclusions
Organisations are increasingly trying to modernise their legacy systems, many of which still run on outdated programming languages such as COBOL. However, a few have succeeded in doing so. The literature offers different perspectives on this challenge. Some researchers see AI as a game changer, capable of automating processes and addressing the shortage of COBOL experts [8], [14]. Others, however, are more cautious, arguing that while AI and agile methodologies are promising, their large-scale applications in legacy system modernisation are still uncertain due to issues such as scalability, standardization, data interoperability and governance [26]. Despite the growing interest in AI-driven modernisation, academic research tends to focus on specific case studies rather than broader, structured frameworks that could guide organisations in different contexts. This suggests a gap in the literature – there is still no clear consensus on how AI and Agile can be effectively integrated to modernise legacy systems while ensuring knowledge retention.
5.1. Theoretical implications
This research contributes to the theory by clarifying that AI is most effective when used to augment, rather than replace human expertise in legacy system modernisation. The DOGE case highlights both the potential and the risks of AI adoption, reinforcing the idea that AI should streamline tasks rather than eliminate roles. This is in line with the growing academic consensus that AI integration is most beneficial when it supports decision making, increases productivity and facilitates knowledge transfer. This key finding helps to demystify concerns about AI-driven job displacement and strengthens the argument that AI’s role in modernising legacy systems should focus on collaboration rather than replacement [3]. 
5.2. Practical Implications
For managers looking to modernise legacy systems, the key is balance - AI can automate processes, improve system interoperability, and address the shortage of COBOL experts, but moving too fast without a clear plan can lead to knowledge gaps, employee resistance and security risks. The DOGE case highlights the risks of rushing to adopt AI without structured oversight. Rather than replacing human expertise, organisations should use AI to support and enhance existing capabilities. Unlike the rigid waterfall approach, which often struggles with complex system transitions, an Agile strategy allows for the gradual, controlled integration of AI, allowing for real-world testing and adaptation. A practical approach is to start small, gather feedback, and scale AI adoption strategically, ensuring that employees are equipped to work alongside automation rather than being displaced by it. Ultimately, AI should complement human expertise, not replace it, and organisations that take a phased, well-structured approach will modernise more effectively while minimising disruption.
5.3. Limitations and future research
This study, which employs a systematic literature review and grey literature analysis, has some limitations, mainly due to its scope and the choices made during the research process. A key limitation is access to internal data, as the analysis is based solely on publicly available documents and industry reports rather than direct access to internal DOGE documentation or interviews with key stakeholders. Time constraints are also a challenge, as the DOGE’s modernisation initiative is still in its early stages. Long-term impacts, such as the sustainability of AI-driven transformations, workforce adaptation, and knowledge retention, cannot be fully assessed, only predicted. Another limitation is the scope of the literature review. While this study follows a systematic literature review methodology prior to grey literature analysis, it is limited by the scope of the Scopus database, which is continuously updated, meaning that recent studies beyond early 2025 were not included. Given the novelty of the topic, grey literature and industry reports were included to capture the most recent developments, but this approach has inherent limitations in terms of academic rigour and reliability.
Future research should aim to address these gaps by conducting empirical case studies that assess the long-term impact of AI-driven modernisation on legacy systems. Qualitative research, including interviews with policy makers, IT specialists, and frontline workers, would provide richer insights into the decision-making processes and real-world challenges of modernisation efforts. In addition, longitudinal studies should assess how AI integration affects knowledge retention, workforce adaptation, and system resilience over time. The development of structured frameworks for AI and Agile integration in legacy system modernisation – taking into account governance, security, and ethical implications -should be a priority for future research. 


Funding: This research was funded by national funds through the research unit Institute of Electronics and Informatics Engineering of Aveiro (IEETA) (UIDB/00127/2020), and Governance, Competitiveness and Public Policy (GOVCOPP) (UIDB/04058/2020).
Data Availability Statement: The raw data supporting the conclusions of this article will be made available by the authors on request.
Conflicts of Interest: The authors declare no conflicts of interest.

References

S. Wang, M. Asif, M. F. Shahzad, and M. Ashfaq, ‘Data privacy and cybersecurity challenges in the digital transformation of the banking sector’, Computers and Security, vol. 147, 2024, doi: 10.1016/j.cose.2024.104051.
A. P. Delladetsimas, S. Papangelou, E. Iosif, and G. Giaglis, ‘Integrating Blockchains with the IoT: A Review of Architectures and Marine Use Cases’, Computers, vol. 13, no. 12, Art. no. 12, Dec. 2024, doi: 10.3390/computers13120329.
K. Lano, H. Haughton, Z. Yuan, and H. Alfraihi, ‘Program Abstraction and Re-Engineering: An Agile MDE Approach’, in 2023 ACM/IEEE International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C), Oct. 2023, pp. 211–220. doi: 10.1109/MODELS-C59198.2023.00050.
M. Al-Kfairy, ‘Strategic Integration of Generative AI in Organizational Settings: Applications, Challenges and Adoption Requirements’, IEEE Engineering Management Review, 2025, doi: 10.1109/EMR.2025.3534034. 
A. Ali, M. Shah, M. Foster, and M. N. Alraja, ‘Cybercrime Resilience in the Era of Advanced Technologies: Evidence from the Financial Sector of a Developing Country’, Computers, vol. 14, no. 2, Art. no. 2, Feb. 2025, doi: 10.3390/computers14020038.
T. R. Vinay and A. A. Chikkamannur, ‘A Machine Learning Technique for Abstraction of Modules in Legacy System and Assigning them on Multicore Machines Using and Controlling p-threads’, International Journal on Recent and Innovation Trends in Computing and Communication, vol. 10, no. 12, pp. 21–25, 2022, doi: 10.17762/ijritcc.v10i12.5837.
B. G. Mateus, M. Martinez, and C. Kolski, ‘Learning migration models for supporting incremental language migrations of software applications’, Information and Software Technology, vol. 153, p. 107082, Jan. 2023, doi: 10.1016/j.infsof.2022.107082.
C. Teale, ‘Government runs on a 64-year-old language. Could AI help change that?’, Route Fifty. Accessed: Mar. 04, 2025. [Online]. Available: https://www.route-fifty.com/emerging-tech/2023/11/government-runs-64-year-old-language-could-ai-help-change/392380/
‘Informatics’. Accessed: May 04, 2025. [Online]. Available: https://www.mdpi.com/journal/informatics/sections/human-computer_interaction
C. Hall, ‘No, COBOL Is Not a Dead Language’. Accessed: Mar. 04, 2025. [Online]. Available: https://www.datacenterknowledge.com/build-design/no-cobol-is-not-a-dead-language
E. B. Swanson, ‘How information systems came to rule the world: Reflections on the information systems field’, Information Society, vol. 36, no. 2, pp. 109–123, 2020, doi: 10.1080/01972243.2019.1709931.
The White House, ‘Establishing And Implementing The President’s “Department Of Government Efficiency”’, The White House. Accessed: Mar. 20, 2025. [Online]. Available: https://www.whitehouse.gov/presidential-actions/2025/01/establishing-and-implementing-the-presidents-department-of-government-efficiency/
D. Hon, ‘From COBOL to chaos: Elon Musk, DOGE, and the Evil Housekeeper Problem’, MIT Technology Review. Accessed: Mar. 04, 2025. [Online]. Available: https://www.technologyreview.com/2025/02/07/1111283/elon-musk-doge-and-the-evil-housekeeper-problem-government-technology/
M. Elahi, S. O. Afolaranmi, J. L. Martinez Lastra, and J. A. Perez Garcia, ‘A comprehensive literature review of the applications of AI techniques through the lifecycle of industrial equipment’, Discover Artificial Intelligence, vol. 3, no. 1, 2023, doi: 10.1007/s44163-023-00089-x.
A. Diamanti, J. M. S. Vilchez, and S. Secci, ‘An AI-Empowered Framework for Cross-Layer Softwarized Infrastructure State Assessment’, IEEE Transactions on Network and Service Management, vol. 19, no. 4, pp. 4434–4448, 2022, doi: 10.1109/TNSM.2022.3161872.
S. Terry and V. Chandrasekar, ‘Developing a model that supports the evolution of legacy systems into an enterprise’, Systems Engineering, vol. 26, no. 6, pp. 859–873, 2023, doi: 10.1002/sys.21700.
Q.-J. Smith and R. Valverde, ‘A perceptron based neural network data analytics architecture for the detection of fraud in credit card transactions in financial legacy systems’, WSEAS Transactions on Systems and Control, vol. 16, pp. 358–374, 2021, doi: 10.37394/23203.2021.16.31.
M. Mazzara, N. Dragoni, A. Bucchiarone, A. Giaretta, S. T. Larsen, and S. Dustdar, ‘Microservices: Migration of a Mission Critical System’, IEEE Transactions on Services Computing, vol. 14, no. 5, pp. 1464–1477, 2021, doi: 10.1109/TSC.2018.2889087.
K. Aslam, L. Cleophas, R. Schiffelers, and M. van den Brand, ‘Interface protocol inference to aid understanding legacy software components’, Software and Systems Modeling, vol. 19, no. 6, pp. 1519–1540, 2020, doi: 10.1007/s10270-020-00809-2.
C. I. Valero, E. I. Pla, R. Vaño, E. Garro, F. Boronat, and C. E. Palau, ‘Design and development of an aiot architecture for introducing a vessel eta cognitive service in a legacy port management solution’, Sensors, vol. 21, no. 23, 2021, doi: 10.3390/s21238133.
S. Katuu, ‘Enterprise Resource Planning: Past, Present, and Future’, New Review of Information Networking, vol. 25, no. 1, pp. 37–46, 2020, doi: 10.1080/13614576.2020.1742770.
C. Sullivan et al., ‘Moving Faster than the COVID-19 Pandemic: The Rapid, Digital Transformation of a Public Health System’, Applied Clinical Informatics, vol. 12, no. 2, pp. 229–236, 2021, doi: 10.1055/s-0041-1725186.
W. Cazzola and L. Favalli, ‘Software modernization powered by dynamic language product lines’, Journal of Systems and Software, vol. 218, p. 112188, Dec. 2024, doi: 10.1016/j.jss.2024.112188.
D. Bhumichai, C. Smiliotopoulos, R. Benton, G. Kambourakis, and D. Damopoulos, ‘The Convergence of Artificial Intelligence and Blockchain: The State of Play and the Road Ahead’, Information (Switzerland), vol. 15, no. 5, 2024, doi: 10.3390/info15050268.
A. Ntafalias et al., ‘Design and Implementation of an Interoperable Architecture for Integrating Building Legacy Systems into Scalable Energy Management Systems’, Smart Cities, vol. 5, no. 4, pp. 1421–1440, 2022, doi: 10.3390/smartcities5040073.
R. Asif, K. Ghanem, and J. Irvine, ‘Proof-of-puf enabled blockchain: Concurrent data and device security for internet-of-energy’, Sensors (Switzerland), vol. 21, no. 1, pp. 1–32, 2021, doi: 10.3390/s21010028.
G. Brataas, A. Martini, G. K. Hanssen, and G. Ræder, ‘Agile elicitation of scalability requirements for open systems: A case study’, Journal of Systems and Software, vol. 182, 2021, doi: 10.1016/j.jss.2021.111064.
S. Nerur, R. Mahapatra, and G. Mangalaraj, ‘Challenges of Migrating to Agile Methodologies’, Commun. ACM, vol. 48, pp. 72–78, May 2005, doi: 10.1145/1060710.1060712.
Catherine, J. D. Trisaktyo, T. Ranas, M. Rasyiid, and M. R. Shihab, ‘Embracing Agile Development Principles in an Organization using the Legacy System: The Case of Bank XYZ in Indonesia’, presented at the 6th International Conference on Computing, Engineering, and Design, ICCED 2020, 2020. doi: 10.1109/ICCED51276.2020.9415831.
M. D. Parrish and S. Corns, ‘An AI-Based Conceptual Framework to Improve Program Management of Complex Systems’, IEEE Engineering Management Review, pp. 1–13, 2024, doi: 10.1109/EMR.2024.3446889.
A. Peters, ‘What will it take to stop Elon Musk and DOGE?’, Fast Company. Accessed: Mar. 20, 2025. [Online]. Available: https://www.fastcompany.com/91272862/what-will-it-take-to-stop-elon-musk-and-doge
J. Hamill, ‘Elon Musk hints at plan to sink DOGE’s teeth into legacy tech’, The Stack. Accessed: Mar. 05, 2025. [Online]. Available: https://www.thestack.technology/elon-musk-hints-at-plan-to-sink-doges-teeth-into-legacy-tech/
K. S. Bradner Clare Duffy, Eric, ‘Technical difficulties derail start of Musk interview with Trump | CNN Politics’, CNN. Accessed: Mar. 20, 2025. [Online]. Available: https://www.cnn.com/2024/08/12/politics/elon-trump-twitter-interview-x/index.html
E. Musk, ‘The government runs on ancient computers & software. Needs an upgrade!’, Twitter. Accessed: Mar. 05, 2025. [Online]. Available: https://x.com/elonmusk/status/1858266013197885723
J. Hamill, ‘Elon Musk hints at plan to sink DOGE’s teeth into legacy tech’, The Stack. Accessed: Mar. 05, 2025. [Online]. Available: https://www.thestack.technology/elon-musk-hints-at-plan-to-sink-doges-teeth-into-legacy-tech/
T. Burman, ‘Social Security’s COBOL software comes under scrutiny’, Newsweek. Accessed: Mar. 05, 2025. [Online]. Available: https://www.newsweek.com/social-security-cobol-software-doge-elon-musk-2032680
R. Shrivastava, ‘The Prompt: Elon Musk’s DOGE Plans To Feed Federal Data Into AI Models’, Forbes. Accessed: Mar. 06, 2025. [Online]. Available: https://www.forbes.com/sites/rashishrivastava/2025/02/25/the-prompt-elon-musks-doge-plans-to-feed-federal-data-into-ai-models/
C. Kube, J. Tsirkin, Y. Alcindor, L. Strickler, and D. Gregorian, ‘DOGE will use AI to assess the responses of federal workers who were told to justify their jobs via email’, NBC News. Accessed: Mar. 06, 2025. [Online]. Available: https://www.nbcnews.com/politics/doge/federal-workers-agencies-push-back-elon-musks-email-ultimatum-rcna193439
B. Merchant, ‘What’s really behind Elon Musk and DOGE’s AI schemes’. Accessed: Mar. 06, 2025. [Online]. Available: https://www.bloodinthemachine.com/p/whats-really-behind-elon-musk-and
M. Kelly, ‘Elon Musk Ally Tells Staff 'AI-First’ Is the Future of Key Government Agency’, Wired, 2025. Accessed: Mar. 06, 2025. [Online]. Available: https://www.wired.com/story/elon-musk-lieutenant-gsa-ai-agency/
B. Green, ‘DOGE Plan to Push AI Across the US Federal Government is Wildly Dangerous’, Tech Policy Press. Accessed: Mar. 07, 2025. [Online]. Available: https://techpolicy.press/doge-plan-to-push-ai-across-the-us-federal-government-is-wildly-dangerous
D. Castro, ‘After DOGE: Trump’s Chance to Modernize’, Mar. 2025. Accessed: Mar. 07, 2025. [Online]. Available: https://itif.org/publications/2025/03/05/after-doge-trumps-chance-to-modernize/
M. Wong, ‘DOGE’s Plans to Replace Humans With AI Are Already Under Way’, The Atlantic. Accessed: Mar. 16, 2025. [Online]. Available: https://www.theatlantic.com/technology/archive/2025/03/gsa-chat-doge-ai/681987/
M. J. Page et al., ‘The PRISMA 2020 statement: An updated guideline for reporting systematic reviews’, The BMJ, vol. 372, 2021, doi: 10.1136/bmj.n71.
J. Reis, P. E. Santo, and N. Melao, ‘Impacts of artificial intelligence on public administration: A systematic literature review’, presented at the Iberian Conference on Information Systems and Technologies, CISTI, 2019. doi: 10.23919/CISTI.2019.8760893.
A. Paez, ‘Gray literature: An important resource in systematic reviews’, Journal of Evidence-Based Medicine, vol. 10, no. 3, pp. 233–240, 2017, doi: 10.1111/jebm.12266.
S. Hepplestone, G. Holden, B. Irwin, H. Parkin, and L. Thorpe, ‘Using technology to encourage student engagement with feedback: A literature review’, Research in Learning Technology, vol. 19, pp. 117–127, Jul. 2011, doi: 10.1080/21567069.2011.586677.
Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.